<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitcamp.java89.ems.dao.ItemDao">

  <resultMap type="item" id="item-map">
    <id     column="itno"  property="itemNo"/>
    <result column="titl"  property="title"/>
    <result column="categ" property="category"/>
    <result column="buy"   property="buyDate"/>
    <result column="day"   property="useDay"/>
    <result column="deal"  property="deal"/>
    <result column="cont"  property="content"/>
    <result column="time"  property="startTime"/>
    <result column="stpc"  property="startPrice"/>

    <result column="mno"  property="memberNo"/>
    <result column="nknm" property="nickName"/>
    <result column="phon" property="phoneNo"/>

    <collection property="photoList" ofType="photo">
      <id     column="pno"  property="photoNo"/>
      <result column="path" property="filePath"/>
    </collection>
  </resultMap>

  <select id="getList" resultMap="item-map">
    select
      i.itno,
      i.titl,
      DATE_FORMAT(i.time, '%Y-%m-%d %H:%i') as time,
      i.stpc,
      p.path
    from item i
    left outer join phot p on i.itno=p.itno
    where time > now()
    order by time asc
    limit #{startRowIndex}, #{rowSize}
  </select>

  <select id="getMyBidList" parameterType="int" resultMap="item-map">
      select
        i.itno
       ,i.mno
       ,i.titl
       ,i.time
       ,i.stpc
       ,p.path
      from item i
      left outer join phot p on i.itno=p.itno
      where i.mno=#{memberNo}
  </select>

  <select id="getOne" parameterType="int" resultMap="item-map">
    select
      i.itno,
      m.nknm,
      m.phon,
      m.mno,
      i.titl,
      i.categ,
      DATE_FORMAT(i.buy, '%Y-%m-%e') as buy,
      i.day,
      i.deal,
      i.cont,
      <choose>
        <when test="value == 0">
          DATE_FORMAT(i.time + interval 30 minute, '%Y-%m-%d %H:%i') as time,
        </when>
        <otherwise>
          DATE_FORMAT(i.time, '%Y-%m-%d %H:%i') as time,
        </otherwise>
      </choose>
      i.stpc,
      m.nknm,
      p.path
    from item i
    left outer join phot p on i.itno=p.itno
    left outer join memb m on i.mno=m.mno
    <choose>
      <when test="value == 0">
        <![CDATA[
          where i.time <= now() and now() <= i.time + interval 30 minute
        ]]>
      </when>
      <otherwise>
        where i.itno=#{value}
      </otherwise>
    </choose>
  </select>

  <select id="getHighestItemNo" resultType="integer">
    select itno
    from item
    order by itno desc
    limit 1;
  </select>

  <insert id="insert" useGeneratedKeys="true" keyColumn="itno" keyProperty="item.itemNo">
    <choose>
      <when test="type == 0">
        insert into item(mno,titl,categ,buy,day,deal,cont,time,stpc) 
        values(#{item.memberNo},#{item.title}, #{item.category}, #{item.buyDate},
        #{item.useDay}, #{item.deal}, #{item.content}, now(), #{item.startPrice})
      </when>
      <otherwise>
        insert into item(mno,titl,categ,buy,day,deal,cont,stpc,time)
        select
          #{item.memberNo},
          #{item.title},
          #{item.category},
          #{item.buyDate},
          #{item.useDay},
          #{item.deal},
          #{item.content},
          #{item.startPrice},
          time + interval 30 minute
        from item
        order by time desc
        limit 1;
      </otherwise>
    </choose>
  </insert>

  <insert id="insertPhoto" parameterType="item">
    insert into phot(itno,path)
    values
    <foreach collection="photoList" item="photo" separator=",">
      (#{itemNo}, #{photo.filePath})
    </foreach>
  </insert>

  <update id="update" parameterType="item">
    update item set
      titl=#{title},
      categ=#{category},
      buy=#{buyDate},
      day=#{useDay},
      deal=#{deal},
      cont=#{content},
      time=#{startTime},
      stpc=#{startPrice}
    where itno=#{itemNo}
  </update>

  <update id="updateStartTime" parameterType="int">
    update item set
      time=DATE_SUB(time, interval 30 minute)
    where itno=#{itemNo}
  </update>

  <delete id="delete" parameterType="int">
    delete from item where itno=#{value}
  </delete>

  <delete id="deletePhoto" parameterType="int">
    delete from phot where itno=#{value}
  </delete>

  <delete id="deleteInter" parameterType="int">
    delete from inter where itno=#{value}
  </delete>

  <select id="getListByCateg" resultMap="item-map">
    select
      i.itno,
      i.titl,
      i.categ,
      DATE_FORMAT(i.time, '%Y-%m-%d %H:%i') as time,
      i.stpc,
      i.cont,
      p.path
    from item i
    left outer join phot p on i.itno=p.itno
    where i.categ=#{categ}
      and i.itno not in(#{itemNo})
      and time > now()
    limit 12;
  </select>

  <select id="getSearchTitle" parameterType="map" resultMap="item-map">
   select  
     i.itno,
     i.mno,
     i.titl,
     i.time,
     i.stpc,
     p.path
    from item i
    left outer join phot p on i.itno=p.itno
    <where> 
    titl like concat('%', #{title}, '%')
     <if test="categoryByAuction == 'true'">
       <![CDATA[
       and time + interval 30 minute > now()
         ]]>
     </if>
     <if test="categoryByAuction == 'false'">
       <![CDATA[
      and time + interval 30 minute < now()
       ]]>
     </if>
     <if test="priceBefore !=null ">
       <![CDATA[
       and stpc >= #{priceBefore} 
       ]]>
     </if> 
     <if test="priceAfter !=null">
       <![CDATA[
       and stpc <= #{priceAfter}
       ]]>
     </if> 
     <if test= 'categoryList.size != 0 '>
       and categ in
       <foreach collection="categoryList" item="category" index="index" separator="," open="(" close=")">
         #{category}
       </foreach>
      </if>
    </where>
    <if test="search == 'time'">
      order by time asc
    </if>
    <if test="search == 'first'">
      order by time desc
    </if>
    <if test="search == 'high'">
      order by stpc desc
    </if>
    <if test="search == 'low'">
      order by stpc asc
    </if>
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id="getSearchCount" parameterType="map" resultType="int">
    select
      count(*)
    from item i
      left outer join phot p on i.itno=p.itno
    <where> 
      titl like concat('%', #{title}, '%')
      <if test="categoryByAuction == 'true'">
         <![CDATA[
         and time + interval 30 minute > now()
           ]]>
      </if>
      <if test="categoryByAuction == 'false'">
         <![CDATA[
        and time + interval 30 minute < now()
         ]]>
      </if>
      <if test="priceBefore !=null ">
        <![CDATA[
        and stpc >= #{priceBefore} 
        ]]>
      </if> 
      <if test="priceAfter !=null">
        <![CDATA[
        and stpc <= #{priceAfter}
        ]]>
      </if> 
      <if test= 'categoryList.size != 0 '>
        and categ in
        <foreach collection="categoryList" item="category" index="index" separator="," open="(" close=")">
          #{category}
        </foreach>
       </if>
    </where>
    <if test="search == 'time'">
      order by time asc
    </if>
    <if test="search == 'first'">
      order by time desc
    </if>
    <if test="search == 'high'">
      order by stpc desc
    </if>
    <if test="search == 'low'">
      order by stpc asc
    </if>
  </select>
  
  <select id="countAll" resultType="int">
    select count(*)
    from item i
    where time > now()
  </select>
</mapper>