<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitcamp.java89.ems.dao.ItemDao">

  <resultMap type="item" id="item-map">
    <id     column="itno"  property="itemNo"/>
    <result column="titl"  property="title"/>
    <result column="categ" property="category"/>
    <result column="buy"   property="buyDate"/>
    <result column="day"   property="useDay"/>
    <result column="deal"  property="deal"/>
    <result column="cont"  property="content"/>
    <result column="time"  property="startTime"/>
    <result column="stpc"  property="startPrice"/>

    <result column="mno"  property="memberNo"/>
    <result column="nknm" property="nickName"/>
    <result column="phon" property="phoneNo"/>

    <collection property="photoList" ofType="photo">
      <id     column="pno"  property="photoNo"/>
      <result column="path" property="filePath"/>
    </collection>
  </resultMap>

  <select id="getList" resultMap="item-map" parameterType="map">
    select
      i.itno,
      i.titl,
      i.time,
      i.stpc,
      p.path
    from item i
    left outer join phot p on i.itno=p.itno
    where time > now()
    order by time asc
    limit #{startRowIndex}, #{rowSize}
  </select>

  <select id="getNowBid" resultMap="item-map">
    <![CDATA[
      select
        i.itno,
        m.nknm,
        i.titl,
        i.categ,
        DATE_FORMAT(i.buy, '%Y-%m-%e') as buy,
        i.day,
        i.deal,
        i.cont,
        i.time + interval 30 minute as time,
        i.stpc,
        p.path
      from item i
      left outer join phot p on i.itno=p.itno
      left outer join memb m on i.mno=m.mno
      where i.time <= now() and now() <= i.time + interval 30 minute;
    ]]>
  </select>

  <select id="getOne" parameterType="int" resultMap="item-map">
    select
      i.itno,
      i.mno,
      i.titl,
      i.categ,
      i.buy,
      i.day,
      i.deal,
      i.cont,
      i.time,
      i.stpc,
      m.nknm,
      m.phon,
      p.path
    from item i
    left outer join phot p on i.itno=p.itno
    left outer join memb m on i.mno=m.mno
    where i.itno=#{value}
  </select>

  <insert id="insert" parameterType="item"
  useGeneratedKeys="true" keyColumn="itno" keyProperty="itemNo">
  <!-- insert into item(mno,titl,categ,buy,day,deal,cont,time,stpc) 
  values(#{memberNo},#{title}, #{category}, #{buyDate}, #{useDay}, #{deal}, #{content}, now(), #{startPrice}) -->
    insert into item(mno,titl,categ,buy,day,deal,cont,stpc,time)
    select
      #{memberNo},
      #{title},
      #{category},
      #{buyDate},
      #{useDay},
      #{deal},
      #{content},
      #{startPrice},
      time + interval 30 minute
    from item
    order by time desc
    limit 1;
  </insert>

  <insert id="insertPhoto" parameterType="item">
    insert into phot(itno,path) 
    values
    <foreach collection="photoList" item="photo" separator=",">
      (#{itemNo}, #{photo.filePath})
    </foreach>
  </insert>

  <update id="update" parameterType="item">
    update item set
      titl=#{title},
      categ=#{category},
      buy=#{buyDate},
      day=#{useDay},
      deal=#{deal},
      cont=#{content},
      time=#{startTime},
      stpc=#{startPrice}
    where itno=#{itemNo}
  </update>

  <delete id="deletePhoto" parameterType="int">
    delete from phot where itno=#{value}
  </delete>

  <delete id="delete" parameterType="int">
    delete from item where no=#{value}
  </delete>

  <select id="getSearchTitle" parameterType="map" resultMap="item-map">
    select
     i.itno,
     i.mno,
     i.titl,
     i.categ,
     i.buy,
     i.day,
     i.deal,
     i.cont,
     i.time,
     i.stpc,
     p.itno,
     p.path
    from item i
    left outer join phot p on i.itno=p.itno
    where titl like concat('%', #{title}, '%');
  </select>
  
   <select id="getCategory" parameterType="map" resultMap="item-map">
   select
     i.itno,
     i.mno,
     i.titl,
     i.time,
     i.stpc,
     p.path
    from item i
    left outer join phot p on i.itno=p.itno
    <where> 
      categ in
      <foreach collection="list" item="category" index="index" separator="," open="(" close=")">
        #{category}
      </foreach>
    </where>
  </select>

  <select id="countAll" resultType="int">
    select count(*)
    from item i
    where time > now()
  </select>

</mapper>